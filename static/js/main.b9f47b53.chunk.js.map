{"version":3,"sources":["assets/guitar.wav","params.js","Compressor.jsx","helpers.js","App.js","reportWebVitals.js","index.js"],"names":["thresholdParams","min","max","step","defaultValue","marks","0","ratioParams","1","2","3","5","8","12","20","kneeParams","0.2","0.4","0.6","0.8","attackParams","100","200","300","400","500","600","700","800","900","1000","releaseParams","gainParams","10","30","40","50","Compressor","useState","guitarFile","audioFile","url","Audio","audio","playing","setPlaying","useEffect","play","pause","addEventListener","removeEventListener","useAudio","isPlaying","toggleIsPlaying","originalAudio","audioContext","window","AudioContext","webkitAudioContext","track","createMediaElementSource","compressor","createDynamicsCompressor","connect","destination","onParamChange","param","value","setValueAtTime","currentTime","console","dir","onClick","reduction","Params","onChange","App","Header","Layout","Content","Title","Typography","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9f47b53.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/guitar.7ab39745.wav\";","export const thresholdParams = {\n  min: -50,\n  max: 0,\n  step: 1,\n  defaultValue: 0,\n  marks: {\n    \"-50\": \"-50dB\",\n    \"-40\": \"-40dB\",\n    \"-30\": \"-30dB\",\n    \"-20\": \"-20dB\",\n    \"-10\": \"-10dB\",\n    0: \"0dB\",\n  },\n};\n\nexport const ratioParams = {\n  min: 1,\n  max: 20,\n  step: 0.1,\n  marks: {\n    1: \"1:1\",\n    2: \"2:1\",\n    3: \"3:1\",\n    5: \"5:1\",\n    8: \"8:1\",\n    12: \"12:1\",\n    20: \"20:1\",\n  },\n};\n\nexport const kneeParams = {\n  min: 0,\n  max: 1,\n  step: 0.1,\n  marks: {\n    0: \"0\",\n    0.2: \"0.2\",\n    0.4: \"0.4\",\n    0.6: \"0.6\",\n    0.8: \"0.8\",\n    1: \"1.0\",\n  },\n};\n\nexport const attackParams = {\n  min: 0,\n  max: 1000,\n  step: 0.5,\n  marks: {\n    0: \"0ms\",\n    100: \"100ms\",\n    200: \"200ms\",\n    300: \"300ms\",\n    400: \"400ms\",\n    500: \"500ms\",\n    600: \"600ms\",\n    700: \"700ms\",\n    800: \"800ms\",\n    900: \"900ms\",\n    1000: \"1000ms\",\n  },\n};\n\nexport const releaseParams = {\n  min: 0,\n  max: 1000,\n  step: 0.5,\n  marks: {\n    0: \"0ms\",\n    100: \"100ms\",\n    200: \"200ms\",\n    300: \"300ms\",\n    400: \"400ms\",\n    500: \"500ms\",\n    600: \"600ms\",\n    700: \"700ms\",\n    800: \"800ms\",\n    900: \"900ms\",\n    1000: \"1000ms\",\n  },\n};\n\nexport const gainParams = {\n  min: -20,\n  max: 50,\n  step: 0.5,\n  defaultValue: 0,\n  marks: {\n    \"-20\": \"-20dB\",\n    \"-10\": \"-10dB\",\n    0: \"0dB\",\n    10: \"10dB\",\n    20: \"20dB\",\n    30: \"30dB\",\n    40: \"40dB\",\n    50: \"50dB\",\n  },\n};\n","import { useState } from \"react\";\nimport { useAudio } from \"./helpers\";\nimport { Slider } from \"antd\";\nimport guitarFile from \"./assets/guitar.wav\";\nimport * as Params from \"./params\";\n\nconst Compressor = () => {\n  const [audioFile, setAudioFile] = useState(guitarFile);\n  const [isPlaying, toggleIsPlaying] = useAudio(audioFile);\n\n  const originalAudio = new Audio(audioFile);\n  const audioContext = new (window.AudioContext || window.webkitAudioContext)();\n  const track = audioContext.createMediaElementSource(originalAudio);\n\n  const compressor = audioContext.createDynamicsCompressor();\n  track.connect(compressor);\n  compressor.connect(audioContext.destination);\n\n  const onParamChange = (param, value) => {\n    compressor[param].setValueAtTime(value, audioContext.currentTime);\n    console.dir(compressor[param]);\n  };\n\n  return (\n    <>\n      <button onClick={toggleIsPlaying}>{isPlaying ? \"Pause\" : \"Play\"}</button>\n      <h4>Reduction</h4>\n      {compressor.reduction}\n      <h4>Threshold</h4>\n      <Slider\n        {...Params.thresholdParams}\n        onChange={(value) => onParamChange(\"threshold\", value)}\n      />\n      <h4>Ratio</h4>\n      <Slider\n        {...Params.ratioParams}\n        onChange={(value) => onParamChange(\"ratio\", value)}\n      />\n      <h4>Knee</h4>\n      <Slider\n        {...Params.kneeParams}\n        onChange={(value) => onParamChange(\"knee\", value * 40)}\n      />\n      <h4>Attack</h4>\n      <Slider\n        {...Params.attackParams}\n        onChange={(value) => onParamChange(\"attack\", value / 1000)}\n      />\n      <h4>Release</h4>\n      <Slider\n        {...Params.releaseParams}\n        onChange={(value) => onParamChange(\"release\", value / 1000)}\n      />\n      <h4>Gain</h4>\n      <Slider\n        {...Params.gainParams}\n        onChange={(value) => onParamChange(\"gain\", value)}\n      />\n    </>\n  );\n};\n\nexport default Compressor;\n","import { useState, useEffect } from \"react\";\n\nexport const useAudio = (url) => {\n  const [audio] = useState(new Audio(url));\n  const [playing, setPlaying] = useState(false);\n\n  const toggle = () => setPlaying(!playing);\n\n  useEffect(() => {\n    playing ? audio.play() : audio.pause();\n  }, [playing]);\n\n  useEffect(() => {\n    audio.addEventListener(\"ended\", () => setPlaying(false));\n    return () => {\n      audio.removeEventListener(\"ended\", () => setPlaying(false));\n    };\n  }, []);\n\n  return [playing, toggle];\n};\n","import \"./App.css\";\nimport Compressor from \"./Compressor\";\nimport { Layout, Typography } from \"antd\";\n\nfunction App() {\n  const { Header, Content } = Layout;\n  const { Title } = Typography;\n\n  return (\n    <Layout className=\"layout\">\n      <Header>\n        <div className=\"header\">\n          <Title>Compressor Demo</Title>\n        </div>\n      </Header>\n      <Content>\n        <div className=\"content\">\n          <Compressor />\n        </div>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}